{"version":3,"file":"2.js","sources":["webpack:///./Client/modules/+profile/changename/change-name.model.ts","webpack:///./Client/modules/+profile/changepassword/change-password.component.ts","webpack:///./Client/modules/+profile/changepassword/change-password.model.ts","webpack:///./Client/modules/+profile/profile.routes.ts","webpack:///./Client/modules/+profile/changename/change-name.component.html","webpack:///./Client/modules/+profile/changepassword/change-password.component.html","webpack:///./Client/modules/+profile/profile.component.html","webpack:///./Client/modules/+profile/profile.module.ts","webpack:///./Client/modules/+profile/profile.service.ts","webpack:///./Client/modules/+profile/profile.component.ts","webpack:///./Client/modules/+profile/changename/change-name.component.ts"],"sourcesContent":["export class ChangeNameModel {\n    constructor(public firstName: string, public lastName: string) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/changename/change-name.model.ts","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\nimport { ProfileService } from '../profile.service';\nimport { ChangePasswordModel } from './change-password.model';\nimport { ValidationService } from '../../shared/forms/validation.service';\n\n@Component({\n    selector: 'appc-change-password',\n    template: require('./change-password.component.html')\n})\nexport class ChangePasswordComponent implements OnInit {\n    submitted: boolean = false;\n    changePasswordForm: FormGroup;\n    changePasswordModel: ChangePasswordModel = new ChangePasswordModel('', '', '');\n    @Output() notification = new EventEmitter<string>();\n\n    constructor(public profileService: ProfileService, private fb: FormBuilder) { }\n\n    ngOnInit() {\n        this.changePasswordForm = this.fb.group({\n            oldPassword: ['', Validators.compose([Validators.required, ValidationService.passwordValidator])],\n            newPassword: ['', Validators.compose([Validators.required, ValidationService.passwordValidator])],\n            confirmPassword: ['', Validators.compose([Validators.required, ValidationService.passwordValidator])]\n        });\n    }\n\n    changePassword(): void {\n        this.submitted = true;\n        if (this.changePasswordForm.valid && this.changePasswordForm.dirty) {\n            this.changePasswordModel.oldPassword = this.changePasswordForm.value.oldPassword;\n            this.changePasswordModel.newPassword = this.changePasswordForm.value.newPassword;\n            this.changePasswordModel.confirmPassword = this.changePasswordForm.value.confirmPassword;\n            this.profileService.changePassword(this.changePasswordModel)\n                .subscribe((res: any) => {\n                    this.notification.emit(`Password changed successfully`);\n                },\n                (errors: any) => {\n                    this.notification.emit(errors[0]);\n                    this.changePasswordModel = new ChangePasswordModel('', '', '');\n                });\n\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/changepassword/change-password.component.ts","export class ChangePasswordModel {\n    constructor(public oldPassword: string, public newPassword: string, public confirmPassword: string) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/changepassword/change-password.model.ts","import { Routes, RouterModule }  from '@angular/router';\n\nimport { ProfileComponent }  from './profile.component';\n\nconst routes: Routes = [\n  { path: '',    component: ProfileComponent }\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/profile.routes.ts","module.exports = \"<div class=\\\"col-lg-4\\\">\\n    <appc-page-heading text=\\\"Change User's name\\\"></appc-page-heading>\\n\\n    <div *ngFor=\\\"let error of errors\\\">\\n        <label class=\\\"error\\\">{{error}}</label>\\n    </div>\\n    <form class=\\\"form-horizontal\\\" #hf=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"firstName\\\">First name</label>\\n            <input type=\\\"text\\\" [class.error]=\\\"!firstName.valid\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"First name\\\" [(ngModel)]=\\\"userNameModel.firstName\\\"\\n                name=\\\"firstName\\\" ngControl=\\\"firstName\\\" required #firstName=\\\"ngModel\\\" />\\n            <label *ngIf=\\\"!firstName.valid && firstName.touched\\\" class=\\\"error\\\">\\n                        FirstName is required\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastName\\\">Last name</label>\\n            <input type=\\\"text\\\" [class.error]=\\\"!lastName.valid\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"LastName\\\" [(ngModel)]=\\\"userNameModel.lastName\\\"\\n                name=\\\"lastName\\\" ngControl=\\\"lastName\\\" required #lastName=\\\"ngModel\\\" />\\n            <label *ngIf=\\\"!lastName.valid && lastName.touched\\\" class=\\\"error\\\">\\n                            LastName is required\\n                        </label>\\n        </div>\\n\\n        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!hf.form.valid\\\">Update</button>\\n    </form>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+profile/changename/change-name.component.html\n// module id = 115\n// module chunks = 2","module.exports = \"<div class=\\\"col-lg-6\\\">\\n    <appc-page-heading text=\\\"Change password\\\"></appc-page-heading>\\n\\n    <div *ngFor=\\\"let error of errors\\\">\\n        <label class=\\\"error\\\">{{error}}</label>\\n    </div>\\n\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"changePasswordForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n            <label>Old password</label>\\n            <input type=\\\"password\\\" [class.error]=\\\"!changePasswordForm.controls.oldPassword.valid\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Old password\\\"\\n                formControlName=\\\"oldPassword\\\" />\\n            <span [hidden]=\\\"changePasswordForm.controls.oldPassword.valid || (changePasswordForm.controls.oldPassword.pristine && !submitted)\\\"\\n                class=\\\"text-danger\\\">\\n                    Old password is required\\n            </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>New password</label>\\n            <input type=\\\"password\\\" [class.error]=\\\"!changePasswordForm.controls.newPassword.valid\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"New password\\\"\\n                formControlName=\\\"newPassword\\\" />\\n            <span [hidden]=\\\"changePasswordForm.controls.newPassword.valid || (changePasswordForm.controls.newPassword.pristine && !submitted)\\\"\\n                class=\\\"text-danger\\\">\\n                    New password is required\\n            </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Confirm password</label>\\n            <input type=\\\"password\\\" [class.error]=\\\"!changePasswordForm.controls.confirmPassword.valid\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm password\\\"\\n                formControlName=\\\"confirmPassword\\\" />\\n            <span [hidden]=\\\"changePasswordForm.controls.confirmPassword.valid || (changePasswordForm.controls.confirmPassword.pristine && !submitted)\\\"\\n                class=\\\"text-danger\\\">\\n                    Confirm password is required\\n            </span>\\n        </div>\\n\\n        <button (click)=\\\"changePassword()\\\" class=\\\"btn btn-primary pull-right\\\">Change password</button>\\n\\n    </form>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+profile/changepassword/change-password.component.html\n// module id = 116\n// module chunks = 2","module.exports = \"<!--Alert message-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"container col-md-4 alert alert-success animated fadeInRight\\\" *ngIf=\\\"notificationMessage\\\">\\n        <button aria-hidden=\\\"true\\\" data-dismiss=\\\"alert\\\" class=\\\"close\\\" type=\\\"button\\\" (click)=\\\"notificationMessage = ''\\\">&times;</button>\\n        {{notificationMessage}}\\n    </div>\\n</div>\\n\\n<appc-change-name (notification)=\\\"notify($event)\\\"></appc-change-name>\\n\\n<appc-change-password (notification)=\\\"notify($event)\\\"></appc-change-password>\\n\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/modules/+profile/profile.component.html\n// module id = 117\n// module chunks = 2","import { NgModule }       from '@angular/core';\n// import { FormBuilder }  from '@angular/common';\n// import { FormsModule } from '@angular/forms';\n\nimport { SharedModule }            from '../shared/shared.module';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileService } from './profile.service';\nimport { routing }            from './profile.routes';\nimport { ChangeNameComponent } from './changename/change-name.component';\nimport { ChangePasswordComponent } from './changepassword/change-password.component';\n\n@NgModule({\n    imports: [routing, SharedModule],\n    declarations: [ProfileComponent, ChangeNameComponent, ChangePasswordComponent],\n    providers: [ProfileService]\n})\nexport class ProfileModule { }\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/profile.module.ts","import { Injectable } from '@angular/core';\n\nimport { DataService } from '../shared/services/data.service';\nimport { ChangePasswordModel } from './changepassword/change-password.model';\nimport { ChangeNameModel } from './changename/change-name.model';\n\n@Injectable()\nexport class ProfileService {\n\n    private userNameApi: string = 'api/profile/username/';\n    private changePasswordApi: string = 'api/profile/changepassword/';\n\n    constructor(private dataService: DataService) { }\n\n    changePassword(changePasswordModel: ChangePasswordModel) {\n        return this.dataService.post(this.changePasswordApi, changePasswordModel);\n    }\n\n    userName(userNameModel?: ChangeNameModel) {\n        if (userNameModel) {\n            return this.dataService.post(this.userNameApi, userNameModel);\n        } else {\n            return this.dataService.get(this.userNameApi);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/profile.service.ts","import { Component } from '@angular/core';\n\nimport { ProfileService } from './profile.service';\n\n@Component({\n    selector: 'appc-user-profile',\n    template: require('./profile.component.html')\n})\nexport class ProfileComponent {\n    notificationMessage: string;\n    notify(message: string) {\n        this.notificationMessage = message;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/profile.component.ts","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { ProfileService } from '../profile.service';\nimport { ChangeNameModel } from './change-name.model';\n\n@Component({\n    selector: 'appc-change-name',\n    template: require('./change-name.component.html')\n})\nexport class ChangeNameComponent implements OnInit {\n    userNameModel: ChangeNameModel = new ChangeNameModel('', '');\n    @Output() notification = new EventEmitter<string>();\n\n    constructor(private profileService: ProfileService) {\n    }\n\n    ngOnInit() {\n        this.profileService.userName()\n            .subscribe((res: any) => {\n                this.userNameModel.firstName = res.firstName;\n                this.userNameModel.lastName = res.lastName;\n            },\n            (errors: any) => this.notification.emit(errors[0])\n            );\n    }\n\n    save(): void {\n        this.profileService.userName(this.userNameModel)\n            .subscribe((res: any) => {\n                this.userNameModel.firstName = res.firstName;\n                this.userNameModel.lastName = res.lastName;\n                this.notification.emit(`Profile name changed to ${res.firstName} ${res.lastName}`);\n            },\n            (errors: any) => this.notification.emit(errors[0])\n            );\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./Client/modules/+profile/changename/change-name.component.ts"],"mappings":";;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAHA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AACA;AAMA;AAMA;AAAA;AAAA;AALA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AA7BA;AAAA;;AAAA;AAJA;AAJA;AACA;AACA;AACA;AAOA;AANA;AAAA;;;;;;;;;;ACXA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAHA;;;;;;;;;;ACAA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;;;ACRA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AAKA;AAKA;AAAA;AAHA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAlBA;AADA;AAMA;AALA;AAAA;;;;;;;;;;;;;;;;;;;ACPA;AAQA;AAAA;AAKA;AAHA;AACA;AACA;AACA;AAAA;AALA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AAMA;AAIA;AAAA;AAHA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AA3BA;AAAA;;AAAA;AAFA;AAJA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;","sourceRoot":""}